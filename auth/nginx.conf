worker_processes 1;

events {
  worker_connections  1024;
}

http {

  ##
  # Basic Settings
  ##
  client_max_body_size 16384m;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;

  upstream docker-registry {
    server registry:5001;
  }

  map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
    '' 'registry/2.0';
  }

  server {
    listen                          443 ssl;
    server_name                     myserver;
    ssl_certificate                 /etc/nginx/server.crt;
    ssl_certificate_key             /etc/nginx/server.key;

    client_max_body_size            0;
    chunked_transfer_encoding       on;

    location /v2/ {
      # Do not allow connections from docker 1.5 and earlier
      # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }

      # To add basic authentication to v2 use auth_basic setting.
      auth_basic "Registry realm";
      auth_basic_user_file /etc/nginx/conf.d/htpasswd;
      auth_request /_auth;

      ## If $docker_distribution_api_version is empty, the header will not be added.
      ## See the map directive above where this variable is defined.
      add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

      proxy_pass                          http://docker-registry;
      proxy_set_header  Host              $http_host;   # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_read_timeout                  900;
    }

    location /_auth {
      if ($remote_user ~* "^.*-?admin$") {
        # *admin is allowed to do anything
        return 200;
      }
      if ($request_method ~* "^(GET|HEAD)$") {
        # all other authed users can only GET/HEAD
        return 200;
      }
      # anonymous users can do nothing
      return 403;
    }
  }
}
